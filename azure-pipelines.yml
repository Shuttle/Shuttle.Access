# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

steps:
- task: DotNetCoreCLI@2
  displayName: 'Publish Shuttle.Access.Projection'
  inputs:
    command: publish
    publishWebProjects: false
    projects: 'Shuttle.Access.Projection/Shuttle.Access.Projection.csproj'
    arguments:  '-f netcoreapp3.1 -r linux-x64 -o $(Build.ArtifactStagingDirectory) -c Release'
    modifyOutputPath: true
- task: DotNetCoreCLI@2
  displayName: 'Publish Shuttle.Access.Server'
  inputs:
    command: publish
    publishWebProjects: false
    projects: 'Shuttle.Access.Server/Shuttle.Access.Server.csproj'
    arguments:  '-f netcoreapp3.1 -r linux-x64 -o $(Build.ArtifactStagingDirectory) -c Release'
    modifyOutputPath: true
- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: '
Copy-Item -Path "Shuttle.Access.WebApi/App.template.config" -Destination "Shuttle.Access.WebApi/App.config" -Force
Copy-Item -Path "Shuttle.Access.WebApi/log4net.template.xml" -Destination "Shuttle.Access.WebApi/log4net.xml" -Force
'
- task: DotNetCoreCLI@2
  displayName: 'Publish Shuttle.Access.WebApi'
  inputs:
    command: publish
    publishWebProjects: false
    projects: 'Shuttle.Access.WebApi/Shuttle.Access.WebApi.csproj'
    arguments:  '-f netcoreapp3.1 -r win-x64 -o $(Build.ArtifactStagingDirectory) -c Release'
    modifyOutputPath: true
- task: PublishBuildArtifacts@1
  displayName: 'Publish Build Artifacts'
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'Shuttle-Access'
    publishLocation: 'Container'